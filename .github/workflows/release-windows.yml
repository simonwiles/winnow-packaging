name: Build executables and create release

on:
  workflow_dispatch:

jobs:
  build_release:
    name: Build Release
    runs-on: windows-latest

    steps:
      - name: Checkout Main Repo
        uses: actions/checkout@v2
        with:
          path: main

      - name: Checkout Winnow Repo
        uses: actions/checkout@v2
        with:
          repository: sul-cidr/ohtap-winnow
          ref: cidr-2021
          path: winnow

      - name: Build Winnow UI (React) Application
        env:
          # is process.env.CI is set, eslint warnings generated by the React source code
          #  are treated as errors and the build fails
          CI: false
        run: |
          cd ${env:GITHUB_WORKSPACE}/winnow
          npm install
          npm run build

      - name: Copy Winnow assets
        run: |
          cp -av ${env:GITHUB_WORKSPACE}/winnow/build ${env:GITHUB_WORKSPACE}/main/winnow/www-data
          cp ${env:GITHUB_WORKSPACE}/winnow/src/tool_script.py ${env:GITHUB_WORKSPACE}/main/winnow/

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Get Python Version
        id: get-python-version
        shell: bash
        run: |
          echo "::set-output name=python-version::$(python -c "import sys; print(sys.hexversion)")"

      - name: Cache
        uses: actions/cache@v2.1.1
        with:
          path: |
            ~/.cache/pip
            src/.venv
          key: ${{ runner.os }}-${{ steps.get-python-version.outputs.python-version }}-${{ hashFiles('Pipfile.lock') }}

      - name: Install Dependencies
        run: |
          cd ${env:GITHUB_WORKSPACE}/main
          sudo pip install pipenv
          PIPENV_VENV_IN_PROJECT=1 pipenv sync --dev
          pipenv install pywin32-ctypes

      - name: Get Version
        id: version
        run: |
          cd ${env:GITHUB_WORKSPACE}/main
          echo "::set-output name=version::$(pipenv run python cli.py --version)"

      - name: Build Linux Executable
        run: |
          cd ${env:GITHUB_WORKSPACE}/main
          pipenv run pyinstaller cli.py --hidden-import winnow.tool_script --onefile --name winnow --add-data "winnow;winnow"

      # - name: Create a Release
      #   uses: actions/create-release@v1
      #   id: create_release
      #   env:
      #     GITHUB_TOKEN: ${{ github.token }}
      #   with:
      #     draft: false
      #     prerelease: false
      #     release_name: ${{ steps.version.outputs.version }}
      #     tag_name: v${{ steps.version.outputs.version }}
      #     body: "Version ${{ steps.version.outputs.version }}"

      # - name: Upload Linux Executable to Release
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ github.token }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ${{ github.workspace }}/main/dist/winnow
      #     asset_name: winnow-linux-${{ steps.version.outputs.version }}
      #     asset_content_type: application/x-executable
