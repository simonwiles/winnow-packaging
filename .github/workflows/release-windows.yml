name: Build executables and create release

on:
  workflow_dispatch:

jobs:
  build_release:
    name: Build Release
    runs-on: windows-latest

    steps:
      - name: Checkout Main Repo
        uses: actions/checkout@v2
        with:
          path: main

      - name: Checkout Winnow Repo
        uses: actions/checkout@v2
        with:
          repository: sul-cidr/ohtap-winnow
          ref: cidr-2021
          path: winnow

      - name: Build Winnow UI (React) Application
        env:
          # is process.env.CI is set, eslint warnings generated by the React source code
          #  are treated as errors and the build fails
          CI: false
        run: |
          cd ${env:GITHUB_WORKSPACE}/winnow
          npm install
          npm run build

      - name: Copy Winnow assets
        run: |
          Copy-Item -Path ${env:GITHUB_WORKSPACE}/winnow/build -Recurse -Destination ${env:GITHUB_WORKSPACE}/main/winnow/www-data -Container
          cp ${env:GITHUB_WORKSPACE}/winnow/src/tool_script.py ${env:GITHUB_WORKSPACE}/main/winnow/

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Get Python Version
        id: get-python-version
        shell: bash
        run: |
          echo "::set-output name=python-version::$(python -c "import sys; print(sys.hexversion)")"

      - name: Cache
        uses: actions/cache@v2.1.1
        with:
          path: |
            ~/.cache/pip
            src/.venv
          key: ${{ runner.os }}-${{ steps.get-python-version.outputs.python-version }}-${{ hashFiles('Pipfile.lock') }}

      - name: Install Dependencies
        run: |
          cd ${env:GITHUB_WORKSPACE}/main
          pip install pipenv
          pipenv sync --dev

      - name: Get Version
        id: version
        run: |
          cd ${env:GITHUB_WORKSPACE}/main
          echo "::set-output name=version::$(pipenv run python cli.py --version)"

      - name: Build Windows Executable
        run: |
          cd ${env:GITHUB_WORKSPACE}/main
          pipenv run pyinstaller cli.py --hidden-import winnow.tool_script --onefile --name winnow --add-data "winnow;winnow"

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: winnow-windows-${{ steps.version.outputs.version }}
          path: ${{ github.workspace }}\main\dist\winnow.exe
          retention-days: 1
